{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.read_csv(r\"C:\\Users\\16479\\Downloads\\new_data.csv\\new_data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2019-11-01 00:00:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1003461</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>xiaomi</td>\n",
       "      <td>489.07</td>\n",
       "      <td>520088904</td>\n",
       "      <td>4d3b30da-a5e4-49df-b1a8-ba5943f1dd33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-11-01 00:00:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5000088</td>\n",
       "      <td>2053013566100866035</td>\n",
       "      <td>appliances.sewing_machine</td>\n",
       "      <td>janome</td>\n",
       "      <td>293.65</td>\n",
       "      <td>530496790</td>\n",
       "      <td>8e5f4f83-366c-4f70-860e-ca7417414283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-11-01 00:00:01 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>17302664</td>\n",
       "      <td>2053013553853497655</td>\n",
       "      <td>NaN</td>\n",
       "      <td>creed</td>\n",
       "      <td>28.31</td>\n",
       "      <td>561587266</td>\n",
       "      <td>755422e7-9040-477b-9bd2-6a6e8fd97387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2019-11-01 00:00:01 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>3601530</td>\n",
       "      <td>2053013563810775923</td>\n",
       "      <td>appliances.kitchen.washer</td>\n",
       "      <td>lg</td>\n",
       "      <td>712.87</td>\n",
       "      <td>518085591</td>\n",
       "      <td>3bfb58cd-7892-48cc-8020-2f17e6de6e7f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2019-11-01 00:00:01 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004775</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>xiaomi</td>\n",
       "      <td>183.27</td>\n",
       "      <td>558856683</td>\n",
       "      <td>313628f1-68b8-460d-84f6-cec7a8796ef2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999995</th>\n",
       "      <td>9999995</td>\n",
       "      <td>2019-11-07 05:08:21 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1005115</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>915.69</td>\n",
       "      <td>517800555</td>\n",
       "      <td>c6b764e0-561c-4c17-a546-2e922196bb49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999996</th>\n",
       "      <td>9999996</td>\n",
       "      <td>2019-11-07 05:08:21 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>12707281</td>\n",
       "      <td>2053013553559896355</td>\n",
       "      <td>NaN</td>\n",
       "      <td>gislaved</td>\n",
       "      <td>90.86</td>\n",
       "      <td>539095445</td>\n",
       "      <td>b1673b33-d0ff-4a09-bf57-56dedc3d016e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999997</th>\n",
       "      <td>9999997</td>\n",
       "      <td>2019-11-07 05:08:21 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>3601405</td>\n",
       "      <td>2053013563810775923</td>\n",
       "      <td>appliances.kitchen.washer</td>\n",
       "      <td>beko</td>\n",
       "      <td>180.16</td>\n",
       "      <td>548916637</td>\n",
       "      <td>e020a307-551c-4e58-a787-126701d30d41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999998</th>\n",
       "      <td>9999998</td>\n",
       "      <td>2019-11-07 05:08:21 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>12711053</td>\n",
       "      <td>2053013553559896355</td>\n",
       "      <td>NaN</td>\n",
       "      <td>tunga</td>\n",
       "      <td>32.69</td>\n",
       "      <td>521586999</td>\n",
       "      <td>c8c48941-2ca1-4ce4-8d44-c96eb5df4fb5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999999</th>\n",
       "      <td>9999999</td>\n",
       "      <td>2019-11-07 05:08:21 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>1005121</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>947.98</td>\n",
       "      <td>563025983</td>\n",
       "      <td>9b19a94a-78b9-4ff8-8334-f48eed7cc0a0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10000000 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Unnamed: 0               event_time event_type  product_id   \n",
       "0                 0  2019-11-01 00:00:00 UTC       view     1003461  \\\n",
       "1                 1  2019-11-01 00:00:00 UTC       view     5000088   \n",
       "2                 2  2019-11-01 00:00:01 UTC       view    17302664   \n",
       "3                 3  2019-11-01 00:00:01 UTC       view     3601530   \n",
       "4                 4  2019-11-01 00:00:01 UTC       view     1004775   \n",
       "...             ...                      ...        ...         ...   \n",
       "9999995     9999995  2019-11-07 05:08:21 UTC       view     1005115   \n",
       "9999996     9999996  2019-11-07 05:08:21 UTC       view    12707281   \n",
       "9999997     9999997  2019-11-07 05:08:21 UTC       view     3601405   \n",
       "9999998     9999998  2019-11-07 05:08:21 UTC       view    12711053   \n",
       "9999999     9999999  2019-11-07 05:08:21 UTC       cart     1005121   \n",
       "\n",
       "                 category_id              category_code     brand   price   \n",
       "0        2053013555631882655     electronics.smartphone    xiaomi  489.07  \\\n",
       "1        2053013566100866035  appliances.sewing_machine    janome  293.65   \n",
       "2        2053013553853497655                        NaN     creed   28.31   \n",
       "3        2053013563810775923  appliances.kitchen.washer        lg  712.87   \n",
       "4        2053013555631882655     electronics.smartphone    xiaomi  183.27   \n",
       "...                      ...                        ...       ...     ...   \n",
       "9999995  2053013555631882655     electronics.smartphone     apple  915.69   \n",
       "9999996  2053013553559896355                        NaN  gislaved   90.86   \n",
       "9999997  2053013563810775923  appliances.kitchen.washer      beko  180.16   \n",
       "9999998  2053013553559896355                        NaN     tunga   32.69   \n",
       "9999999  2053013555631882655     electronics.smartphone     apple  947.98   \n",
       "\n",
       "           user_id                          user_session  \n",
       "0        520088904  4d3b30da-a5e4-49df-b1a8-ba5943f1dd33  \n",
       "1        530496790  8e5f4f83-366c-4f70-860e-ca7417414283  \n",
       "2        561587266  755422e7-9040-477b-9bd2-6a6e8fd97387  \n",
       "3        518085591  3bfb58cd-7892-48cc-8020-2f17e6de6e7f  \n",
       "4        558856683  313628f1-68b8-460d-84f6-cec7a8796ef2  \n",
       "...            ...                                   ...  \n",
       "9999995  517800555  c6b764e0-561c-4c17-a546-2e922196bb49  \n",
       "9999996  539095445  b1673b33-d0ff-4a09-bf57-56dedc3d016e  \n",
       "9999997  548916637  e020a307-551c-4e58-a787-126701d30d41  \n",
       "9999998  521586999  c8c48941-2ca1-4ce4-8d44-c96eb5df4fb5  \n",
       "9999999  563025983  9b19a94a-78b9-4ff8-8334-f48eed7cc0a0  \n",
       "\n",
       "[10000000 rows x 10 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>10000000</td>\n",
       "      <td>10000000</td>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>6697210</td>\n",
       "      <td>8589537</td>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>10000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>NaN</td>\n",
       "      <td>523423</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>126</td>\n",
       "      <td>3373</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2190461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-11-05 17:23:19 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>samsung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4488e77a-9901-4c4b-b162-47a224ceab51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>NaN</td>\n",
       "      <td>113</td>\n",
       "      <td>9731128</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2543371</td>\n",
       "      <td>1158050</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.000000e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.100008e+07</td>\n",
       "      <td>2.057828e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.925741e+02</td>\n",
       "      <td>5.354292e+08</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.886751e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.228346e+07</td>\n",
       "      <td>1.943274e+16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.538111e+02</td>\n",
       "      <td>2.037214e+07</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000365e+06</td>\n",
       "      <td>2.053014e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.030022e+07</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.500000e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.005252e+06</td>\n",
       "      <td>2.053014e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.667000e+01</td>\n",
       "      <td>5.159950e+08</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.000000e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.100722e+06</td>\n",
       "      <td>2.053014e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.653100e+02</td>\n",
       "      <td>5.306267e+08</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.499999e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.640001e+07</td>\n",
       "      <td>2.053014e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.654600e+02</td>\n",
       "      <td>5.548916e+08</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.999999e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.210003e+07</td>\n",
       "      <td>2.180737e+18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.574070e+03</td>\n",
       "      <td>5.684226e+08</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Unnamed: 0               event_time event_type    product_id   \n",
       "count   1.000000e+07                 10000000   10000000  1.000000e+07  \\\n",
       "unique           NaN                   523423          3           NaN   \n",
       "top              NaN  2019-11-05 17:23:19 UTC       view           NaN   \n",
       "freq             NaN                      113    9731128           NaN   \n",
       "mean    5.000000e+06                      NaN        NaN  1.100008e+07   \n",
       "std     2.886751e+06                      NaN        NaN  1.228346e+07   \n",
       "min     0.000000e+00                      NaN        NaN  1.000365e+06   \n",
       "25%     2.500000e+06                      NaN        NaN  1.005252e+06   \n",
       "50%     5.000000e+06                      NaN        NaN  5.100722e+06   \n",
       "75%     7.499999e+06                      NaN        NaN  1.640001e+07   \n",
       "max     9.999999e+06                      NaN        NaN  6.210003e+07   \n",
       "\n",
       "         category_id           category_code    brand         price   \n",
       "count   1.000000e+07                 6697210  8589537  1.000000e+07  \\\n",
       "unique           NaN                     126     3373           NaN   \n",
       "top              NaN  electronics.smartphone  samsung           NaN   \n",
       "freq             NaN                 2543371  1158050           NaN   \n",
       "mean    2.057828e+18                     NaN      NaN  2.925741e+02   \n",
       "std     1.943274e+16                     NaN      NaN  3.538111e+02   \n",
       "min     2.053014e+18                     NaN      NaN  0.000000e+00   \n",
       "25%     2.053014e+18                     NaN      NaN  6.667000e+01   \n",
       "50%     2.053014e+18                     NaN      NaN  1.653100e+02   \n",
       "75%     2.053014e+18                     NaN      NaN  3.654600e+02   \n",
       "max     2.180737e+18                     NaN      NaN  2.574070e+03   \n",
       "\n",
       "             user_id                          user_session  \n",
       "count   1.000000e+07                              10000000  \n",
       "unique           NaN                               2190461  \n",
       "top              NaN  4488e77a-9901-4c4b-b162-47a224ceab51  \n",
       "freq             NaN                                   504  \n",
       "mean    5.354292e+08                                   NaN  \n",
       "std     2.037214e+07                                   NaN  \n",
       "min     1.030022e+07                                   NaN  \n",
       "25%     5.159950e+08                                   NaN  \n",
       "50%     5.306267e+08                                   NaN  \n",
       "75%     5.548916e+08                                   NaN  \n",
       "max     5.684226e+08                                   NaN  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_categories = df['category_code'].unique()\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "df_sum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['electronics.smartphone', 'appliances.sewing_machine', nan,\n",
       "       'appliances.kitchen.washer', 'computers.notebook',\n",
       "       'furniture.living_room.sofa', 'appliances.kitchen.refrigerators',\n",
       "       'furniture.kitchen.chair', 'appliances.kitchen.dishwasher',\n",
       "       'electronics.audio.headphone', 'appliances.environment.vacuum',\n",
       "       'appliances.environment.water_heater', 'electronics.camera.video',\n",
       "       'electronics.clocks', 'electronics.video.tv', 'apparel.tshirt',\n",
       "       'apparel.jeans', 'construction.tools.drill',\n",
       "       'auto.accessories.compressor', 'computers.components.motherboard',\n",
       "       'computers.peripherals.printer', 'computers.desktop',\n",
       "       'auto.accessories.player', 'accessories.bag',\n",
       "       'computers.components.videocards', 'furniture.bedroom.bed',\n",
       "       'furniture.bathroom.bath', 'electronics.audio.subwoofer',\n",
       "       'construction.tools.welding', 'construction.tools.saw',\n",
       "       'furniture.kitchen.table', 'apparel.shoes',\n",
       "       'construction.tools.light', 'apparel.shirt',\n",
       "       'construction.tools.painting', 'furniture.living_room.cabinet',\n",
       "       'appliances.personal.massager', 'apparel.costume',\n",
       "       'computers.peripherals.keyboard', 'kids.toys',\n",
       "       'computers.components.memory', 'electronics.tablet',\n",
       "       'appliances.kitchen.hood', 'kids.dolls', 'apparel.trousers',\n",
       "       'kids.carriage', 'sport.bicycle', 'electronics.telephone',\n",
       "       'computers.components.hdd', 'computers.components.cpu',\n",
       "       'auto.accessories.videoregister', 'apparel.shoes.keds',\n",
       "       'appliances.environment.air_conditioner',\n",
       "       'appliances.kitchen.blender',\n",
       "       'electronics.audio.music_tools.piano', 'apparel.shoes.moccasins',\n",
       "       'apparel.underwear', 'appliances.personal.scales',\n",
       "       'electronics.audio.acoustic', 'auto.accessories.winch',\n",
       "       'accessories.wallet', 'appliances.kitchen.microwave',\n",
       "       'computers.components.cooler', 'appliances.kitchen.meat_grinder',\n",
       "       'apparel.dress', 'appliances.kitchen.oven', 'apparel.jumper',\n",
       "       'computers.peripherals.mouse', 'computers.peripherals.monitor',\n",
       "       'appliances.iron', 'construction.tools.pump',\n",
       "       'auto.accessories.alarm', 'appliances.kitchen.coffee_machine',\n",
       "       'kids.skates', 'construction.tools.generator',\n",
       "       'appliances.kitchen.mixer', 'furniture.bedroom.pillow',\n",
       "       'sport.trainer', 'furniture.bathroom.toilet',\n",
       "       'apparel.shoes.ballet_shoes', 'computers.components.power_supply',\n",
       "       'construction.components.faucet', 'electronics.video.projector',\n",
       "       'furniture.living_room.chair', 'sport.snowboard',\n",
       "       'appliances.kitchen.hob', 'auto.accessories.radar',\n",
       "       'appliances.kitchen.grill', 'appliances.kitchen.kettle',\n",
       "       'appliances.personal.hair_cutter', 'appliances.ironing_board',\n",
       "       'appliances.environment.air_heater', 'auto.accessories.parktronic',\n",
       "       'kids.fmcg.diapers', 'electronics.audio.microphone',\n",
       "       'appliances.kitchen.steam_cooker', 'medicine.tools.tonometer',\n",
       "       'appliances.kitchen.toster', 'appliances.kitchen.juicer',\n",
       "       'computers.ebooks', 'country_yard.cultivator',\n",
       "       'appliances.kitchen.coffee_grinder', 'furniture.universal.light',\n",
       "       'sport.ski', 'apparel.shoes.slipons', 'apparel.scarf',\n",
       "       'furniture.bedroom.blanket', 'accessories.umbrella', 'kids.swing',\n",
       "       'apparel.belt', 'auto.accessories.anti_freeze',\n",
       "       'electronics.camera.photo', 'computers.peripherals.camera',\n",
       "       'stationery.cartrige', 'construction.tools.soldering',\n",
       "       'sport.tennis', 'country_yard.furniture.hammok',\n",
       "       'apparel.shoes.sandals', 'country_yard.lawn_mower',\n",
       "       'apparel.shoes.espadrilles', 'appliances.environment.fan',\n",
       "       'apparel.shoes.step_ins', 'apparel.sock', 'apparel.shorts',\n",
       "       'country_yard.furniture.bench', 'apparel.glove', 'apparel.skirt'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unique_categories\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>563459593</th>\n",
       "      <td>652832.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>514160399</th>\n",
       "      <td>543233.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>521680052</th>\n",
       "      <td>459149.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554031096</th>\n",
       "      <td>442912.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512365995</th>\n",
       "      <td>432171.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512498145</th>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512600103</th>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564603399</th>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528450507</th>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554938897</th>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1104582 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 sum\n",
       "user_id             \n",
       "563459593  652832.83\n",
       "514160399  543233.67\n",
       "521680052  459149.57\n",
       "554031096  442912.63\n",
       "512365995  432171.46\n",
       "...              ...\n",
       "512498145       0.00\n",
       "512600103       0.00\n",
       "564603399       0.00\n",
       "528450507       0.00\n",
       "554938897       0.00\n",
       "\n",
       "[1104582 rows x 1 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_user=df.groupby('user_id')['price'].aggregate(['sum'])\n",
    "df_user.sort_values('sum',ascending=False,inplace=True)\n",
    "df_user"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>563459593</th>\n",
       "      <td>652832.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>514160399</th>\n",
       "      <td>543233.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>521680052</th>\n",
       "      <td>459149.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554031096</th>\n",
       "      <td>442912.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512365995</th>\n",
       "      <td>432171.46</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 sum\n",
       "user_id             \n",
       "563459593  652832.83\n",
       "514160399  543233.67\n",
       "521680052  459149.57\n",
       "554031096  442912.63\n",
       "512365995  432171.46"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_user.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15533</th>\n",
       "      <td>15533</td>\n",
       "      <td>2019-11-01 01:35:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1005105</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>1348.61</td>\n",
       "      <td>563459593</td>\n",
       "      <td>036351f4-8171-473d-a79e-d704a8fff9eb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15573</th>\n",
       "      <td>15573</td>\n",
       "      <td>2019-11-01 01:35:07 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1005105</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>1348.61</td>\n",
       "      <td>563459593</td>\n",
       "      <td>036351f4-8171-473d-a79e-d704a8fff9eb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15611</th>\n",
       "      <td>15611</td>\n",
       "      <td>2019-11-01 01:35:15 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1005105</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>1348.61</td>\n",
       "      <td>563459593</td>\n",
       "      <td>61221499-4bbf-4585-9a00-d21f40e39de6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15644</th>\n",
       "      <td>15644</td>\n",
       "      <td>2019-11-01 01:35:22 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004246</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>749.67</td>\n",
       "      <td>563459593</td>\n",
       "      <td>8ed00822-d3cb-42a9-aabf-6219b9a71b53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15709</th>\n",
       "      <td>15709</td>\n",
       "      <td>2019-11-01 01:35:36 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004246</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>749.67</td>\n",
       "      <td>563459593</td>\n",
       "      <td>8ed00822-d3cb-42a9-aabf-6219b9a71b53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9806120</th>\n",
       "      <td>9806120</td>\n",
       "      <td>2019-11-07 01:52:57 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004240</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>1053.57</td>\n",
       "      <td>563459593</td>\n",
       "      <td>ad9a2df2-793e-4a24-b463-6b8c8b105e6a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9806204</th>\n",
       "      <td>9806204</td>\n",
       "      <td>2019-11-07 01:53:08 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>4804056</td>\n",
       "      <td>2053013554658804075</td>\n",
       "      <td>electronics.audio.headphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>160.36</td>\n",
       "      <td>563459593</td>\n",
       "      <td>868d8393-6684-4631-9906-8955cc82afe1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9806969</th>\n",
       "      <td>9806969</td>\n",
       "      <td>2019-11-07 01:54:45 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>4804056</td>\n",
       "      <td>2053013554658804075</td>\n",
       "      <td>electronics.audio.headphone</td>\n",
       "      <td>apple</td>\n",
       "      <td>160.36</td>\n",
       "      <td>563459593</td>\n",
       "      <td>d5a7ebcc-543c-4c67-a661-06e27fb48d26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9807634</th>\n",
       "      <td>9807634</td>\n",
       "      <td>2019-11-07 01:56:09 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004788</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>xiaomi</td>\n",
       "      <td>140.01</td>\n",
       "      <td>563459593</td>\n",
       "      <td>f95a3e24-673a-4ff7-811e-9afd13771fd0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9807708</th>\n",
       "      <td>9807708</td>\n",
       "      <td>2019-11-07 01:56:18 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>1004788</td>\n",
       "      <td>2053013555631882655</td>\n",
       "      <td>electronics.smartphone</td>\n",
       "      <td>xiaomi</td>\n",
       "      <td>140.01</td>\n",
       "      <td>563459593</td>\n",
       "      <td>f95a3e24-673a-4ff7-811e-9afd13771fd0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>674 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Unnamed: 0               event_time event_type  product_id   \n",
       "15533         15533  2019-11-01 01:35:00 UTC       view     1005105  \\\n",
       "15573         15573  2019-11-01 01:35:07 UTC       view     1005105   \n",
       "15611         15611  2019-11-01 01:35:15 UTC       view     1005105   \n",
       "15644         15644  2019-11-01 01:35:22 UTC       view     1004246   \n",
       "15709         15709  2019-11-01 01:35:36 UTC       view     1004246   \n",
       "...             ...                      ...        ...         ...   \n",
       "9806120     9806120  2019-11-07 01:52:57 UTC       view     1004240   \n",
       "9806204     9806204  2019-11-07 01:53:08 UTC       view     4804056   \n",
       "9806969     9806969  2019-11-07 01:54:45 UTC       view     4804056   \n",
       "9807634     9807634  2019-11-07 01:56:09 UTC       view     1004788   \n",
       "9807708     9807708  2019-11-07 01:56:18 UTC       view     1004788   \n",
       "\n",
       "                 category_id                category_code   brand    price   \n",
       "15533    2053013555631882655       electronics.smartphone   apple  1348.61  \\\n",
       "15573    2053013555631882655       electronics.smartphone   apple  1348.61   \n",
       "15611    2053013555631882655       electronics.smartphone   apple  1348.61   \n",
       "15644    2053013555631882655       electronics.smartphone   apple   749.67   \n",
       "15709    2053013555631882655       electronics.smartphone   apple   749.67   \n",
       "...                      ...                          ...     ...      ...   \n",
       "9806120  2053013555631882655       electronics.smartphone   apple  1053.57   \n",
       "9806204  2053013554658804075  electronics.audio.headphone   apple   160.36   \n",
       "9806969  2053013554658804075  electronics.audio.headphone   apple   160.36   \n",
       "9807634  2053013555631882655       electronics.smartphone  xiaomi   140.01   \n",
       "9807708  2053013555631882655       electronics.smartphone  xiaomi   140.01   \n",
       "\n",
       "           user_id                          user_session  \n",
       "15533    563459593  036351f4-8171-473d-a79e-d704a8fff9eb  \n",
       "15573    563459593  036351f4-8171-473d-a79e-d704a8fff9eb  \n",
       "15611    563459593  61221499-4bbf-4585-9a00-d21f40e39de6  \n",
       "15644    563459593  8ed00822-d3cb-42a9-aabf-6219b9a71b53  \n",
       "15709    563459593  8ed00822-d3cb-42a9-aabf-6219b9a71b53  \n",
       "...            ...                                   ...  \n",
       "9806120  563459593  ad9a2df2-793e-4a24-b463-6b8c8b105e6a  \n",
       "9806204  563459593  868d8393-6684-4631-9906-8955cc82afe1  \n",
       "9806969  563459593  d5a7ebcc-543c-4c67-a661-06e27fb48d26  \n",
       "9807634  563459593  f95a3e24-673a-4ff7-811e-9afd13771fd0  \n",
       "9807708  563459593  f95a3e24-673a-4ff7-811e-9afd13771fd0  \n",
       "\n",
       "[674 rows x 10 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['user_id'] == '563459593') ]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['user_id'] = df['user_id'].astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "category_code\n",
       "electronics.smartphone              3191770.54\n",
       "computers.notebook                  2008328.84\n",
       "electronics.clocks                   874606.12\n",
       "appliances.kitchen.refrigerators     589422.52\n",
       "appliances.kitchen.oven              393880.70\n",
       "electronics.video.tv                 363058.84\n",
       "computers.desktop                    285499.51\n",
       "electronics.tablet                   237919.61\n",
       "appliances.kitchen.washer            201953.20\n",
       "appliances.environment.vacuum        198247.59\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_100_users = df['user_id'].value_counts().head(100).index\n",
    "filtered_df = df[df['user_id'].isin(top_100_users)]\n",
    "\n",
    "# Step 2: Group by 'category_code' and calculate sum of prices\n",
    "grouped_df = filtered_df.groupby('category_code')['price'].sum()\n",
    "\n",
    "# Step 3: Sort the grouped data in descending order\n",
    "sorted_df = grouped_df.sort_values(ascending=False)\n",
    "\n",
    "# Step 4: Select the top 10 category_codes\n",
    "top_10_category_codes = sorted_df.head(10)\n",
    "\n",
    "top_10_category_codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['event_time'] = pd.to_datetime(df['event_time'])\n",
    "df['event_time_only'] = df['event_time'].dt.time\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "purchase_category_counts = df[df['event_type'] == 'purchase']['category_code'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "category_code\n",
       "electronics.smartphone         63808\n",
       "electronics.audio.headphone     6114\n",
       "electronics.video.tv            4076\n",
       "electronics.clocks              3451\n",
       "appliances.kitchen.washer       2855\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purchase_category_counts.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['event_time_category'] = df['event_time_only'].apply(\n",
    "    lambda x: 'morning' if 7 <= x.hour < 11 else\n",
    "              'afternoon' if 11 <= x.hour < 16 else\n",
    "              'evening' if 16 <= x.hour < 20 else\n",
    "              'midnight' if 20 <= x.hour < 24 else\n",
    "              'late night'\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "smartphones_df = df[df['category_code'] == 'electronics.smartphone']\n",
    "\n",
    "# Count the occurrences of each event_time_category\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "event_time_category\n",
       "afternoon     755257\n",
       "late night    595805\n",
       "evening       548129\n",
       "morning       540613\n",
       "midnight      103567\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "event_time_category_counts = smartphones_df['event_time_category'].value_counts()\n",
    "event_time_category_counts"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
